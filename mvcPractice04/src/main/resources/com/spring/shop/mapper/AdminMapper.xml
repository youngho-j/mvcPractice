<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.shop.mapper.AdminMapper">
 	
<!-- 상품 등록 [등록 후 해당 bookId 값 가져옴]-->
<insert id="bookEnroll" parameterType="com.spring.shop.vo.BookVO">

	<selectKey resultType="int" keyProperty="bookId" order="AFTER">
		select last_insert_id()
	</selectKey>
	
	insert into book_list(bookName, authorId, publicationDate, publisher, categoryCode, bookPrice, bookStock, bookDiscount, bookIntro, bookContents)
	values(#{bookName},#{authorId}, #{publicationDate},#{publisher},#{categoryCode},#{bookPrice},#{bookStock},#{bookDiscount},#{bookIntro},#{bookContents})
</insert>
 
<!-- 카테고리 목록 -->
<select id="categoryList" resultType="com.spring.shop.vo.CategoryVO">
	select * 
	from book_category
	order by categoryCode
</select> 

<!-- 상품 리스트 --> 
<select id="goodsList" resultType="com.spring.shop.vo.BookVO">
	
	select bookId, bookName, author.authorName, cate.categoryName, bookStock, list.regDate
	from book_list list 

	left outer join book_author author on list.authorId = author.authorId
	left outer join book_category cate on list.categoryCode = cate.categoryCode
	<if test="keyword != null">
		where (bookName like concat ('%', #{keyword}, '%'))
	</if>
	order by bookId desc 
	limit #{skip}, #{viewPerPage}		
	
</select>

<!-- 상품 총 개수 -->
<select  id="goodsTotal" resultType="int">
	select count(*) 
	from book_list
	<if test="keyword != null">
		where bookName like concat('%', #{keyword}, '%')
	</if>
</select>

<!-- 상품 상세 조회 -->
<select id="goodsDetail" resultType="com.spring.shop.vo.BookVO">
	select bookId, bookName, a.authorName, l.authorId, publicationDate, publisher, categoryCode, bookPrice, bookStock, bookDiscount, bookIntro, bookContents, l.regDate, l.updateDate
	from book_list l
	
	left outer join book_author a on l.authorId = a.authorId
	
	where bookId = #{bookId}
</select>

<!-- 상품 정보 수정 -->
<update id="goodsModify">
	update book_list
	set bookName = #{bookName}, authorId = #{authorId}, publicationDate = #{publicationDate}, 
		publisher = #{publisher}, categoryCode = #{categoryCode}, bookPrice = #{bookPrice}, 
		bookStock = #{bookStock}, bookDiscount = #{bookDiscount}, bookIntro = #{bookIntro}, 
		bookContents = #{bookContents}, updateDate = now()
	where bookId = #{bookId}
</update>

<!-- 상품 정보 삭제 -->
<delete id="goodsDelete">
	delete from 
	book_list
	where bookId = #{bookId}
</delete>

<!-- 이미지 정보 삽입 -->
<insert id="goodsImgEnroll">
	insert into book_images(bookId, fileName, uploadPath, uuid)	values
	 (#{bookId}, #{fileName}, #{uploadPath}, #{uuid})
</insert>

<!-- 상품 이미지 정보 삭제 -->
<delete id="goodsImgDelete">
	delete from 
	book_images
	where bookId = #{bookId}
</delete>

</mapper>