<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.shop.mapper.BookMapper">
 <!-- 상품 등록 [등록 후 해당 bookId 값 가져옴]-->
<insert id="bookEnroll" parameterType="com.spring.shop.vo.BookVO">
	
	<selectKey resultType="int" keyProperty="bookId" order="AFTER">
		select last_insert_id()
	</selectKey>
		
	insert into book_list(bookName, authorId, publicationDate, publisher, categoryCode, bookPrice, bookStock, bookDiscount, bookIntro, bookContents)
	values(#{bookName},#{authorId}, #{publicationDate},#{publisher},#{categoryCode},#{bookPrice},#{bookStock},#{bookDiscount},#{bookIntro},#{bookContents})
</insert>
	
<!-- 상품 상세 조회 -->
<select id="goodsDetail" resultType="com.spring.shop.vo.BookVO">
	select bookId, bookName, a.authorName, l.authorId, publicationDate, publisher, categoryCode, bookPrice, bookStock, bookDiscount, bookIntro, bookContents, l.regDate, l.updateDate
	from book_list l
		
	left outer join book_author a on l.authorId = a.authorId
		
	where bookId = #{bookId}
</select>
	
<!-- 상품 정보 수정 -->
<update id="goodsModify">
	update book_list
	set bookName = #{bookName}, authorId = #{authorId}, publicationDate = #{publicationDate}, 
		publisher = #{publisher}, categoryCode = #{categoryCode}, bookPrice = #{bookPrice}, 
		bookStock = #{bookStock}, bookDiscount = #{bookDiscount}, bookIntro = #{bookIntro}, 
		bookContents = #{bookContents}, updateDate = now()
	where bookId = #{bookId}
</update>
	
<!-- 상품 정보 삭제 -->
<delete id="goodsDelete">
	delete from 
	book_list
	where bookId = #{bookId}
</delete>

<!-- 테이블 전체 삭제(테스트용) -->
<delete id="deleteAll">
	delete from book_list
</delete>
 	
<!-- 테이블 전체 삭제 검증(테스트용) -->
<select id="getCount" resultType="int">
	select count(*) 
	from book_list
</select>
 	
<!-- 마지막으로 등록한 상품 정보(테스트용) -->
<select id="getLastPK" resultType="int">
	select bookId 
	from book_list
	order by bookId desc 
	limit 1
</select>
</mapper>